ARM GAS  /tmp/cc0c0KSg.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"system_samd21.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	SystemCoreClock
  16              		.section	.data.SystemCoreClock,"aw"
  17              		.align	2
  20              	SystemCoreClock:
  21 0000 40420F00 		.word	1000000
  22              		.section	.text.SystemInit,"ax",%progbits
  23              		.align	1
  24              		.global	SystemInit
  25              		.arch armv6s-m
  26              		.syntax unified
  27              		.code	16
  28              		.thumb_func
  29              		.fpu softvfp
  31              	SystemInit:
  32              	.LFB40:
  33              		.file 1 "./src/system_samd21.c"
   1:./src/system_samd21.c **** /**
   2:./src/system_samd21.c ****  * \file
   3:./src/system_samd21.c ****  *
   4:./src/system_samd21.c ****  * \brief Low-level initialization functions called upon chip startup.
   5:./src/system_samd21.c ****  *
   6:./src/system_samd21.c ****  * Copyright (c) 2018 Microchip Technology Inc.
   7:./src/system_samd21.c ****  *
   8:./src/system_samd21.c ****  * \asf_license_start
   9:./src/system_samd21.c ****  *
  10:./src/system_samd21.c ****  * \page License
  11:./src/system_samd21.c ****  *
  12:./src/system_samd21.c ****  * SPDX-License-Identifier: Apache-2.0
  13:./src/system_samd21.c ****  *
  14:./src/system_samd21.c ****  * Licensed under the Apache License, Version 2.0 (the "License"); you may
  15:./src/system_samd21.c ****  * not use this file except in compliance with the License.
  16:./src/system_samd21.c ****  * You may obtain a copy of the Licence at
  17:./src/system_samd21.c ****  * 
  18:./src/system_samd21.c ****  * http://www.apache.org/licenses/LICENSE-2.0
  19:./src/system_samd21.c ****  * 
  20:./src/system_samd21.c ****  * Unless required by applicable law or agreed to in writing, software
  21:./src/system_samd21.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  22:./src/system_samd21.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:./src/system_samd21.c ****  * See the License for the specific language governing permissions and
  24:./src/system_samd21.c ****  * limitations under the License.
  25:./src/system_samd21.c ****  *
  26:./src/system_samd21.c ****  * \asf_license_stop
  27:./src/system_samd21.c ****  *
ARM GAS  /tmp/cc0c0KSg.s 			page 2


  28:./src/system_samd21.c ****  */
  29:./src/system_samd21.c **** 
  30:./src/system_samd21.c **** #include "samd21.h"
  31:./src/system_samd21.c **** 
  32:./src/system_samd21.c **** /**
  33:./src/system_samd21.c ****  * Initial system clock frequency. The System RC Oscillator (RCSYS) provides
  34:./src/system_samd21.c ****  *  the source for the main clock at chip startup.
  35:./src/system_samd21.c ****  */
  36:./src/system_samd21.c **** #define __SYSTEM_CLOCK    (1000000)
  37:./src/system_samd21.c **** 
  38:./src/system_samd21.c **** uint32_t SystemCoreClock = __SYSTEM_CLOCK;/*!< System Clock Frequency (Core Clock)*/
  39:./src/system_samd21.c **** 
  40:./src/system_samd21.c **** /**
  41:./src/system_samd21.c ****  * Initialize the system
  42:./src/system_samd21.c ****  *
  43:./src/system_samd21.c ****  * @brief  Setup the microcontroller system.
  44:./src/system_samd21.c ****  *         Initialize the System and update the SystemCoreClock variable.
  45:./src/system_samd21.c ****  */
  46:./src/system_samd21.c **** void SystemInit(void)
  47:./src/system_samd21.c **** {
  34              		.loc 1 47 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              	.LCFI1:
  45              		.cfi_def_cfa_register 7
  48:./src/system_samd21.c ****         // Keep the default device state after reset
  49:./src/system_samd21.c ****         SystemCoreClock = __SYSTEM_CLOCK;
  46              		.loc 1 49 25
  47 0004 024B     		ldr	r3, .L3
  48 0006 034A     		ldr	r2, .L3+4
  49 0008 1A60     		str	r2, [r3]
  50:./src/system_samd21.c ****         return;
  50              		.loc 1 50 9
  51 000a C046     		nop
  51:./src/system_samd21.c **** }
  52              		.loc 1 51 1
  53 000c BD46     		mov	sp, r7
  54              		@ sp needed
  55 000e 80BD     		pop	{r7, pc}
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0010 00000000 		.word	SystemCoreClock
  60 0014 40420F00 		.word	1000000
  61              		.cfi_endproc
  62              	.LFE40:
  64              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  65              		.align	1
  66              		.global	SystemCoreClockUpdate
  67              		.syntax unified
ARM GAS  /tmp/cc0c0KSg.s 			page 3


  68              		.code	16
  69              		.thumb_func
  70              		.fpu softvfp
  72              	SystemCoreClockUpdate:
  73              	.LFB41:
  52:./src/system_samd21.c **** 
  53:./src/system_samd21.c **** /**
  54:./src/system_samd21.c ****  * Update SystemCoreClock variable
  55:./src/system_samd21.c ****  *
  56:./src/system_samd21.c ****  * @brief  Updates the SystemCoreClock with current core Clock
  57:./src/system_samd21.c ****  *         retrieved from cpu registers.
  58:./src/system_samd21.c ****  */
  59:./src/system_samd21.c **** void SystemCoreClockUpdate(void)
  60:./src/system_samd21.c **** {
  74              		.loc 1 60 1
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI3:
  85              		.cfi_def_cfa_register 7
  61:./src/system_samd21.c ****         // Not implemented
  62:./src/system_samd21.c ****         SystemCoreClock = __SYSTEM_CLOCK;
  86              		.loc 1 62 25
  87 0004 024B     		ldr	r3, .L7
  88 0006 034A     		ldr	r2, .L7+4
  89 0008 1A60     		str	r2, [r3]
  63:./src/system_samd21.c ****         return;
  90              		.loc 1 63 9
  91 000a C046     		nop
  64:./src/system_samd21.c **** }
  92              		.loc 1 64 1
  93 000c BD46     		mov	sp, r7
  94              		@ sp needed
  95 000e 80BD     		pop	{r7, pc}
  96              	.L8:
  97              		.align	2
  98              	.L7:
  99 0010 00000000 		.word	SystemCoreClock
 100 0014 40420F00 		.word	1000000
 101              		.cfi_endproc
 102              	.LFE41:
 104              		.text
 105              	.Letext0:
 106              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/machine/_default_types.h"
 107              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/sys/_stdint.h"
 108              		.file 4 "./lib/samd21a/system_samd21.h"
ARM GAS  /tmp/cc0c0KSg.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_samd21.c
     /tmp/cc0c0KSg.s:20     .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cc0c0KSg.s:17     .data.SystemCoreClock:0000000000000000 $d
     /tmp/cc0c0KSg.s:23     .text.SystemInit:0000000000000000 $t
     /tmp/cc0c0KSg.s:31     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cc0c0KSg.s:59     .text.SystemInit:0000000000000010 $d
     /tmp/cc0c0KSg.s:65     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cc0c0KSg.s:72     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cc0c0KSg.s:99     .text.SystemCoreClockUpdate:0000000000000010 $d

NO UNDEFINED SYMBOLS
